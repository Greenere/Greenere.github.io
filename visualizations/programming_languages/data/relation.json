{
  "links": [
    {"source": "Assembly", "target": "Fortran", "type": "None", "name": "Assembly"},
    {"source": "Assembly", "target": "Lisp", "type": "None", "name": "Assembly"},
    {"source": "Assembly", "target": "APL", "type": "None", "name": "Assembly"},
    {"source": "Assembly", "target": "BCPL", "type": "None", "name": "Assembly"},
    {"source": "Fortran", "target": "Basic", "type": "compiled", "name": "Fortran"},
    {"source": "Fortran", "target": "Algol60", "type": "compiled", "name": "Fortran"},
    {"source": "Fortran", "target": "Cobol", "type": "compiled", "name": "Fortran"},
    {"source": "Fortran", "target": "Lisp", "type": "compiled", "name": "Fortran"},
    {"source": "Algol60", "target": "Algol-W", "type": "compiled", "name": "Algol60"},
    {"source": "Algol60", "target": "Simula", "type": "compiled", "name": "Algol60"},
    {"source": "Algol60", "target": "PL-1", "type": "compiled", "name": "Algol60"},
    {"source": "Algol60", "target": "Algol68", "type": "compiled", "name": "Algol60"},
    {"source": "Cobol", "target": "PL-1", "type": "compiled", "name": "Cobol"},
    {"source": "Lisp", "target": "Loops", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Prolog", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "ML", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Logo", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Dylan", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "JavaScript", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Julia", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Nim", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "CLOS", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Erlang", "type": "compiled", "name": "Lisp"},
    {"source": "Lisp", "target": "Haskell", "type": "compiled", "name": "Lisp"},
    {"source": "Dylan", "target": "Ruby", "type": "interpreted", "name": "Dylan"},
    {"source": "Dylan", "target": "Julia", "type": "interpreted", "name": "Dylan"},
    {"source": "Algol-W", "target": "Pascal", "type": "compiled", "name": "Algol-W"},
    {"source": "Simula", "target": "Modula-2", "type": "interpreted", "name": "Simula"},
    {"source": "Simula", "target": "Oberon-2", "type": "interpreted", "name": "Simula"},
    {"source": "Simula", "target": "Smalltalk-80", "type": "interpreted", "name": "Simula"},
    {"source": "Simula", "target": "C++", "type": "interpreted", "name": "Simula"},
    {"source": "Algol68", "target": "Ada", "type": "compiled", "name": "Algol68"},
    {"source": "Algol68", "target": "C", "type": "compiled", "name": "Algol68"},
    {"source": "Algol68", "target": "C++", "type": "compiled", "name": "Algol68"},
    {"source": "APL", "target": "Go", "type": "compiled", "name": "APL"},
    {"source": "APL", "target": "Matlab", "type": "compiled", "name": "APL"},
    {"source": "BCPL", "target": "Go", "type": "compiled", "name": "BCPL"},
    {"source": "BCPL", "target": "C", "type": "compiled", "name": "BCPL"},
    {"source": "Pascal", "target": "Modula-2", "type": "compiled", "name": "Pascal"},
    {"source": "Pascal", "target": "Ada", "type": "compiled", "name": "Pascal"},
    {"source": "Pascal", "target": "Mesa", "type": "compiled", "name": "Pascal"},
    {"source": "Pascal", "target": "Sather", "type": "compiled", "name": "Pascal"},
    {"source": "Pascal", "target": "Go", "type": "compiled", "name": "Pascal"},
    {"source": "Mesa", "target": "Modula-2", "type": "compiled", "name": "Mesa"},
    {"source": "Mesa", "target": "Ada", "type": "compiled", "name": "Mesa"},
    {"source": "C", "target": "C++", "type": "compiled", "name": "C"},
    {"source": "C", "target": "C#", "type": "compiled", "name": "C"},
    {"source": "C", "target": "Objective C", "type": "compiled", "name": "C"},
    {"source": "C", "target": "Perl", "type": "compiled", "name": "C"},
    {"source": "C", "target": "PHP", "type": "compiled", "name": "C"},
    {"source": "C", "target": "Julia", "type": "compiled", "name": "C"},
    {"source": "C", "target": "Go", "type": "compiled", "name": "C"},
    {"source": "C", "target": "Crystal", "type": "compiled", "name": "C"},
    {"source": "Perl", "target": "Python", "type": "interpreted", "name": "Perl"},
    {"source": "Perl", "target": "PHP", "type": "interpreted", "name": "Perl"},
    {"source": "Modula-2", "target": "Modula-3", "type": "compiled", "name": "Modula-2"},
    {"source": "Modula-2", "target": "Oberon-2", "type": "compiled", "name": "Modula-2"},
    {"source": "Modula-2", "target": "Eiffel", "type": "compiled", "name": "Modula-2"},
    {"source": "Modula-2", "target": "Go", "type": "compiled", "name": "Modula-2"},
    {"source": "Modula-3", "target": "Sather", "type": "compiled", "name": "Modula-3"},
    {"source": "Modula-3", "target": "Java", "type": "compiled", "name": "Modula-3"},
    {"source": "Modula-3", "target": "Python", "type": "compiled", "name": "Modula-3"},
    {"source": "Modula-3", "target": "Lua", "type": "compiled", "name": "Modula-3"},
    {"source": "Modula-3", "target": "Go", "type": "compiled", "name": "Modula-3"},
    {"source": "Modula-3", "target": "Nim", "type": "compiled", "name": "Modula-3"},
    {"source": "Ada", "target": "Component Pascal", "type": "compiled", "name": "Ada"},
    {"source": "Ada", "target": "Eiffel", "type": "compiled", "name": "Ada"},
    {"source": "Ada", "target": "Ruby", "type": "compiled", "name": "Ada"},
    {"source": "Ada", "target": "Nim", "type": "compiled", "name": "Ada"},
    {"source": "Smalltalk-80", "target": "Java", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Sather", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "C++", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "CLOS", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Objective C", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Python", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Go", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Scala", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Smalltalk-80", "target": "Erlang", "type": "compiled", "name": "Smalltalk-80"},
    {"source": "Objective C", "target": "Sather", "type": "compiled", "name": "Objective C"},
    {"source": "Objective C", "target": "Java", "type": "compiled", "name": "Objective C"},
    {"source": "Objective C", "target": "Swift", "type": "compiled", "name": "Objective C"},
    {"source": "Loops", "target": "CLOS", "type": "None", "name": "Loops"},
    {"source": "C++", "target": "Java", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "Sather", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "C#", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "Rust", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "Lua", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "PHP", "type": "compiled", "name": "C++"},
    {"source": "C++", "target": "Nim", "type": "compiled", "name": "C++"},
    {"source": "Oberon-2", "target": "Java", "type": "compiled", "name": "Oberon-2"},
    {"source": "Oberon-2", "target": "Component Pascal", "type": "compiled", "name": "Oberon-2"},
    {"source": "Oberon-2", "target": "Go", "type": "compiled", "name": "Oberon-2"},
    {"source": "Oberon-2", "target": "Nim", "type": "compiled", "name": "Oberon-2"},
    {"source": "Eiffel", "target": "Sather", "type": "compiled", "name": "Eiffel"},
    {"source": "Eiffel", "target": "C#", "type": "compiled", "name": "Eiffel"},
    {"source": "Eiffel", "target": "Scala", "type": "compiled", "name": "Eiffel"},
    {"source": "Sather", "target": "C#", "type": "compiled", "name": "Sather"},
    {"source": "Java", "target": "C#", "type": "compiled", "name": "Java"},
    {"source": "Java", "target": "Python", "type": "compiled", "name": "Java"},
    {"source": "Java", "target": "JavaScript", "type": "compiled", "name": "Java"},
    {"source": "Java", "target": "PHP", "type": "compiled", "name": "Java"},
    {"source": "Java", "target": "Scala", "type": "compiled", "name": "Java"},
    {"source": "Java", "target": "TypeScript", "type": "compiled", "name": "Java"},
    {"source": "Component Pascal", "target": "C#", "type": "compiled", "name": "Component Pascal"},
    {"source": "JavaScript", "target": "Dart", "type": "interpreted", "name": "JavaScript"},
    {"source": "JavaScript", "target": "CoffeeScript", "type": "interpreted", "name": "JavaScript"},
    {"source": "JavaScript", "target": "PHP", "type": "interpreted", "name": "JavaScript"},
    {"source": "JavaScript", "target": "TypeScript", "type": "interpreted", "name": "JavaScript"},
    {"source": "CoffeeScript", "target": "Dart", "type": "interpreted", "name": "CoffeeScirpt"},
    {"source": "CLOS", "target": "R", "type": "compiled", "name": "CLOS"},
    {"source": "CLOS", "target": "Scala", "type": "compiled", "name": "CLOS"},
    {"source": "C#", "target": "Rust", "type": "compiled", "name": "C#"},
    {"source": "C#", "target": "Swift", "type": "compiled", "name": "C#"},
    {"source": "C#", "target": "Crystal", "type": "compiled", "name": "C#"},
    {"source": "C#", "target": "TypeScript", "type": "compiled", "name": "C#"},
    {"source": "Ruby", "target": "Rust", "type": "compiled", "name": "Ruby"},
    {"source": "Ruby", "target": "Julia", "type": "compiled", "name": "Ruby"},
    {"source": "Ruby", "target": "Swift", "type": "compiled", "name": "Ruby"},
    {"source": "Ruby", "target": "Crystal", "type": "compiled", "name": "Ruby"},
    {"source": "Ruby", "target": "CoffeeScript", "type": "compiled", "name": "Ruby"},
    {"source": "Lua", "target": "Ruby", "type": "interpreted", "name": "Lua"},
    {"source": "Lua", "target": "JavaScript", "type": "interpreted", "name": "Lua"},
    {"source": "Lua", "target": "Julia", "type": "interpreted", "name": "Lua"},
    {"source": "Perl", "target": "Julia", "type": "interpreted", "name": "Perl"},
    {"source": "Python", "target": "Julia", "type": "interpreted", "name": "Python"},
    {"source": "Python", "target": "Swift", "type": "interpreted", "name": "Python"},
    {"source": "Python", "target": "Crystal", "type": "interpreted", "name": "Python"},
    {"source": "Python", "target": "Nim", "type": "interpreted", "name": "Python"},
    {"source": "R", "target": "Julia", "type": "compiled", "name": "R"},
    {"source": "Go", "target": "Crystal", "type": "compiled", "name": "Go"},
    {"source": "Rust", "target": "Swift", "type": "compiled", "name": "Rust"},
    {"source": "Rust", "target": "Crystal", "type": "compiled", "name": "Rust"},
    {"source": "Rust", "target": "Nim", "type": "compiled", "name": "Rust"},
    {"source": "Basic", "target": "Visual Basic", "type": "compiled", "name": "Basic"},
    {"source": "Logo", "target": "Smalltalk-80", "type": "interpreted", "name": "Logo"},
    {"source": "Prolog", "target": "Erlang", "type": "compiled", "name": "Prolog"},
    {"source": "Prolog", "target": "SQL", "type": "compiled", "name": "Prolog"},
    {"source": "Erlang", "target": "Go", "type": "interpreted", "name": "Erlang"},
    {"source": "Erlang", "target": "Rust", "type": "interpreted", "name": "Erlang"},
    {"source": "Erlang", "target": "Scala", "type": "interpreted", "name": "Erlang"},
    {"source": "Erlang", "target": "Dart", "type": "interpreted", "name": "Erlang"},
    {"source": "ML", "target": "Scala", "type": "compiled", "name": "ML"},
    {"source": "ML", "target": "Haskell", "type": "compiled", "name": "ML"},
    {"source": "Haskell", "target": "Python", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "Rust", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "Scala", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "Swift", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "Java", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "Visual Basic", "type": "compiled", "name": "Haskell"},
    {"source": "Haskell", "target": "CoffeeScript", "type": "compiled", "name": "Haskell"}
  ],

  "nodes": [
    {"year":"1949","id": "Assembly","type": "None", "print": "Hi, I am Assembly and have no standard print functionO_O"},
    {"year":"1957","id": "Fortran" ,"type": "compiled", "print": "print *, \"Hi, I am Fortran^_^\""},
    {"year":"1958","id": "Lisp" ,"type": "compiled", "print": "(format t \"Hi, I am Lisp^_^\")"},
    {"year":"1966","id": "APL" ,"type": "compiled", "print": "'Hi, I am APL^_^'"},
    {"year":"1967","id": "BCPL" ,"type": "compiled", "print": "Ws(\"Hi, I am BCPL^_^\")"},
    {"year":"1964","id": "Basic" ,"type": "compiled", "print": "PRINT \"Hi, I am Basic^_^\""},
    {"year":"1960","id": "Algol60" ,"type": "compiled", "print": "OUTSTRING(1, '('Hi, I am Algol 60^_^')');"},
    {"year":"1959","id": "Cobol" ,"type": "compiled", "print": "DISPLAY 'Hi, I am Cobol^_^'."},
    {"year":"1966","id": "Algol-W" ,"type": "compiled", "print": "OUTSTRING(1, '('Hi, I am Algol-W^_^')');"},
    {"year":"1962","id": "Simula" ,"type": "interpreted", "print": "outtext(\"Hi, I am Simula, I am special since I have only one quote^_^);"},
    {"year":"1964","id": "PL-1" ,"type": "compiled", "print": "put skip list(\"Hi, I am PL-1^_^\");"},
    {"year":"1973","id": "Algol68" ,"type": "compiled", "print": "printf(($gl$, \"Hi, I am Algol 68^_^\"))"},
    {"year":"1967","id": "Loops" ,"type": "None", "print": "Hi, I am Loops and have no standard print functionO_O"},
    {"year":"1972","id": "Prolog" ,"type": "compiled", "print": "write('Hi, I am Prolog^_^')."},
    {"year":"1973","id": "ML" ,"type": "compiled", "print": "print \"Hi, I am ML^_^'\";"},
    {"year":"1967","id": "Logo" ,"type": "interpreted", "print": "PRINT [Hi, I am Logo^_^]"},
    {"year":"1992","id": "Dylan" ,"type": "interpreted", "print": "format-out(\"Hi, I am Dylan^_^\")"},
    {"year":"1995","id": "JavaScript" ,"type": "interpreted", "print": "console.log('Hi, I am JavaScript^_^')"},
    {"year":"1995","id": "Ruby" ,"type": "compiled", "print": "puts \"Hi, I am Ruby^_^\""},
    {"year":"1970","id": "Pascal" ,"type": "compiled", "print": "writeln ('Hi, I am Pascal^_^')"},
    {"year":"1978","id": "Modula-2" ,"type": "compiled", "print": "WriteString(\"Hi, I am Modula-2^_^\");"},
    {"year":"1991","id": "Oberon-2" ,"type": "compiled", "print": "Out.String(\"Hi, I am Oberon^_^\");"},
    {"year":"1972","id": "Smalltalk-80" ,"type": "compiled", "print": "Transcript show: 'Hi, I am Smalltalk^_^'."},
    {"year":"1985","id": "C++" ,"type": "compiled", "print": "std::cout << \"Hi, I am C++^_^\";"},
    {"year":"1980","id": "Ada" ,"type": "compiled", "print": "Text_IO.Put_Line(\"Hi, I am Ada^_^\");"},
    {"year":"1972","id": "C" ,"type": "compiled", "print": "printf(\"Hi, I am C^_^\")"},
    {"year":"1976","id": "Mesa" ,"type": "compiled", "print": "glutCreateWindow(\"Hi, I am Mesa^_^\");"},
    {"year":"1990","id": "Sather" ,"type": "compiled", "print": "#OUT+\"Hi, I am Sather^_^\";"},
    {"year":"2000","id": "C#" ,"type": "compiled", "print": "System.Console.WriteLine(\"Hi, I am C#^_^\");"},
    {"year":"1984","id": "Objective C" ,"type": "compiled", "print": "NSLog(@\"Hi, I am Objective C^_^\");"},
    {"year":"1988","id": "Perl" ,"type": "interpreted", "print": "print(\"Hi, I am Perl^_^\");"},
    {"year":"1991","id": "Python" ,"type": "interpreted", "print": "print(\"Hi, I am Python^_^\")"},
    {"year":"1988","id": "Modula-3" ,"type": "compiled", "print": "IO.Put(\"Hi, I am Modula-3^_^\");"},
    {"year":"1986","id": "Eiffel" ,"type": "compiled", "print": "io.put_string (\"Hi, I am Eiffel^_^\")"},
    {"year":"1995","id": "Java" ,"type": "compiled", "print": "System.out.println(\"Hi, I am Java^_^\");"},
    {"year":"1997","id": "Component Pascal" ,"type": "compiled", "print": "Console.WriteString(\"Hi, I am Component Pascal^_^\");"},
    {"year":"1988","id": "CLOS" ,"type": "compiled", "print": "(print \"Hi, I am common Lisp^_^\")"},
    {"year":"2011","id": "Dart" ,"type": "interpreted", "print": "print('Hi, I am Dart^_^');"},
    {"year":"2009","id": "CoffeeScript", "type": "interpreted", "print": "console.log 'Hi, I am CoffeeScript^_^'"},
    {"year":"1993","id": "R", "type": "interpreted", "print": "print(\"Hi, I am R^_^\")"},
    {"year":"2010","id": "Rust", "type": "compiled", "print": "println!(\"Hi, I am Rust^_^\");"},
    {"year":"1993","id": "Lua", "type": "interpreted", "print": "print(\"Hi, I am Lua^_^\")"},
    {"year":"1995","id": "PHP", "type": "interpreted", "print": "<?php echo '<p>Hi, I am PHP^_^</p>'; ?> "},
    {"year":"2012","id": "Julia", "type": "compiled", "print": "println(\"Hi, I am Julia^_^\")"},
    {"year":"2014","id": "Swift", "type": "compiled", "print": "print(\"Hi, I am Swift^_^\")"},
    {"year":"2009","id": "Go", "type": "compiled", "print": "fmt.Println(\"Hi, I am Go^_^\")"},
    {"year":"2014","id": "Crystal", "type": "compiled", "print": "puts \"Hi, I am Crystal^_^\""},
    {"year":"1991","id": "Visual Basic", "type": "compiled", "print":"Console.WriteLine(\"Hi, I am Visual Basic^_^\")"},
    {"year":"2008","id": "Nim", "type": "compiled", "print": "echo \"Hi, I am Nim^_^\""},
    {"year":"1979","id": "Matlab", "type": "interpreted", "print": "disp('Hi, I am Matlab^_^');"},
    {"year":"1986","id": "SQL", "type": "interpreted", "print": "dbms_output.put_line (‘Hi, I am SQL^_^');"},
    {"year":"2012","id": "TypeScript", "type": "interpreted", "print": "console.log(\"Hi, I am TypeScript^_^\")"},
    {"year":"1986","id": "Erlang", "type": "interpreted", "print": "io:fwrite(\"Hi, I am Erlang^_^\n\")."},
    {"year":"2004","id": "Scala", "type": "compiled", "print": "println(\"Hi, I am Scala^_^\")"},
    {"year":"1990","id": "Haskell", "type": "compiled", "print": "putStrLn \"Hi, I am Haskell^_^\""}
  ]
}